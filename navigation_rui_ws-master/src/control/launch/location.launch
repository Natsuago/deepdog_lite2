<launch>

  <include file="$(find message_transformer_cpp_parking)/launch/message_transformer_cpp.launch" />

  <node pkg="robot_localization" type="ekf_localization_node"
        name="robot_localization_ekf_node_map"
        clear_params="true">
    <param name="frequency" value="10" />
    <param name="sensor_timeout" value="0.2" />
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="true" />
    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_link" />
    <param name="world_frame" value="odom" />
    <param name="pose0" value="/leg_odom" />
    <param name="imu0" value="/imu/data" />
    <rosparam param="imu0_config">
      [true, true, true,
      true, true, true,
      true, true, true,
      true, true, true,
    true, true, true]</rosparam>
    <rosparam param="pose0_config">
      [true, true, true,
      true, true, true,
      true, true, true,
      true, true, true,
    true, true, true]</rosparam>
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

  <node pkg="control" type="control_node"  respawn="false" name="control" output="screen">
    <param name="Vcmd" value="0.5" /> <!-- speed of car m/s -->
    <!-- ESC -->
    <param name="base_speed" value="0.5"/> <!-- speed of car m/s  -->
    <!-- Servo -->
    <param name="base_angle" value="0.0"/> <!-- the middle pos of servo if tuning needed  -->
    <param name="angle_gain" value="0.1"/> <!-- for tt02: >0, for hsp: <0 -->
    <param name="min_angle_range" value="5.0"/>
    <param name="min_goal_distance" value="0.1"/>
  </node>

</launch>
